// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String?     @unique @db.VarChar(255)
  fullName   String      @db.VarChar(100)
  userName   String?     @unique @db.VarChar(50)
  password   String?     @db.VarChar(255)
  questions  Questions[]
  answers    Answers[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt()
  isAdmin    Boolean     @default(false)
  isVerified Boolean     @default(false)
  count      Int         @default(0)
}

model Questions {
  id          String    @id @default(uuid())
  title       String?   @db.VarChar(255)
  images      Images[]
  answers     Answers[]
  description String?   @db.Text
  tags        String[]  @default(["no tag"])
  count       Int       @default(0)
  createdAt   DateTime  @default(now())
  createdById String
  createdBy   User      @relation(fields: [createdById], references: [id], onDelete: Cascade)
}

model Images {
  id         String    @id @default(uuid())
  url        String?   @db.VarChar(500)
  questionId String
  createdAt  DateTime  @default(now())
  question   Questions @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

model Answers {
  id          String    @id @default(uuid())
  content     String?   @db.Text
  questionId  String
  createdById String
  isAccepted  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  question    Questions @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdBy   User      @relation(fields: [createdById], references: [id], onDelete: Cascade)
}
